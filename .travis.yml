dist: xenial

sudo: false

language: cpp

before_script:
  - mkdir build

matrix:
  include:

    # Commit whitespace checker
    - os: linux
      env:
      - TEST="Git Check"
      script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

    - os: linux
      compiler: gcc
      env:
       - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
       - OPENSSL_VERSION=openssl-1.1.0
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - zip
      script:
       - cd build
       - cmake -DBUILD_SSL=NO ..
       - make -j3
       - make test	# j suppose to be based on number of processor...
       - make install

      before_deploy:
       - cd ..
       - LASTTAG=`git tag -l |tail -n 2|head -n 1`
       - VTAG=`git describe --abbrev=0 --tags`-`date +%d-%m-%Y-%T`
       - git log $LASTTAG.. --pretty=full --format="%s %ce" >> CHANGELOG.md
       - zip -r restbed-$VTAG.zip distribution/* CHANGELOG.md

      deploy:
       provider: custom
       skip_cleanup: true
       api_key:
         secure:
       file_glob: true
       file: restbed-*.zip
       on:
         tags: true

    # Build only arm linux check
    - os: linux
      compiler: gcc
      env:
       - TEST="arm-linux"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5-arm-linux-gnueabihf
      script:
       - cd build
       - export CC=`which arm-linux-gnueabihf-gcc-5`
       - export CXX=`which arm-linux-gnueabihf-g++-5`
       - cmake -DBUILD_SSL=NO ..
       - make -j3

    - os: linux
      compiler: clang
      env:
       - TEST="linux-clang"
      addons:
        apt:
          sources:
           - ubuntu-toolchain-r-test
          packages:
           - g++-5             #libstdc++5 required
           - uuid-dev
           - libxml2-dev
           - libsqlite3-dev
           - libz-dev
           - wget

      before_script:
       - wget https://github.com/mull-project/mull/releases/download/0.4.0/Mull-0.4.0-LLVM-8.0-ubuntu-16.04.deb -O ~/Mull.deb
       - sudo dpkg -i ~/Mull.deb

      script:
       - cd build
       - cmake -DBUILD_SSL=NO -DBUILD_MUTATION_TEST=ON ..
       - make -j3
       - make test	# j suppose to be based on number of processor...
       - cp ../mutationtest.sh .
       - chmod +x ./mutationtest.sh
       - ./mutationtest.sh

    - os: osx
      compiler: clang
      env:
       - TEST="osx-clang"
      script:
       - cd build
       - cmake -DBUILD_SSL=NO ..
       - make -j3 && make test	# j suppose to be based on number of processor...

    #
    # Documentation generation
    #
    - os: linux
      env:
       - TEST="Documentation"
      addons:
        apt:
          packages:
           - doxygen
      script:
       - doxygen > doxygen-output.log 2>&1
       - COUNT=`grep -rnw doxygen-output.log -e "warning:" | wc -l`
       - |
         if [[ "$COUNT" > "0" ]]; then
            # On ideal case we have to return error, for now just let user know
            echo "Documentation error found. Please take a look."
         fi

    #
    # cppcheck
    #
    - os: linux
      env:
       - TEST="cppcheck"
      addons:
        apt:
          packages:
           - cppcheck
      script:
       - cppcheck --enable=warning,style,performance,portability,unusedFunction --std=c++11 --verbose --language=c++ -I source/corvusoft/restbed/*.hpp source/corvusoft/restbed/detail/*.hpp source/corvusoft/restbed > cppcheck.log 2>&1
         # just print few of them...
       - |
               echo "Number of performance issue found: " `grep cppcheck.log -e performace|wc -l`
               echo "Number of style issue found: " `grep cppcheck.log -e style|wc -l`
               echo "Number of unused function: " `grep cppcheck.log -e unusedFunction|wc -l`

    #
    # cpplint
    #
    - os: linux
      env:
       - TEST="cpplint"
      addons:
        apt:
          packages:
           - curl
      script:
       - curl https://raw.githubusercontent.com/cpplint/cpplint/master/cpplint.py -o cpplint.py
       - python cpplint.py source/corvusoft/restbed/*{.cpp,hpp} > lint.log 2>&1
       - OUTPUT=`grep lint.log -e "Total errors found:"`
       - echo $OUTPUT

    # Code coverage based on gcov
    - os: linux
      compiler: gcc
      env:
       - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      script:
       - cd build
       - cmake -DBUILD_SSL=NO -DBUILD_COVERAGE=ON ..
       - make -j3
       - make gcov

    # Memory check testing
    - os: linux
      compiler: gcc
      env:
       - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
       - TEST="MemoryCheck"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - valgrind
      script:
       - cd build
       - cmake -DBUILD_SSL=NO -DBUILD_VALGRIND=ON ..
       - make -j3
       - ctest -T memcheck

         #notifications:
         #  recipients:
         #    - rakib_mc12@yahoo.com
         #  email:
         #    on_success: change
         #    on_failure: always
